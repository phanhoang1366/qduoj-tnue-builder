diff --git a/Dockerfile b/Dockerfile
index d0190fc1..56e78fa5 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -5,7 +5,7 @@ WORKDIR /app
 RUN <<EOS
 set -ex
 apk add unzip
-wget https://github.com/QingdaoU/OnlineJudgeFE/releases/download/oj_2.7.5/dist.zip
+wget https://github.com/phanhoang1366/OnlineJudgeFE/releases/download/v2025.06.05/dist.zip
 unzip dist.zip
 rm -f dist.zip
 EOS
diff --git a/contest/serializers.py b/contest/serializers.py
index 356cddae..8d9e416d 100644
--- a/contest/serializers.py
+++ b/contest/serializers.py
@@ -83,7 +83,7 @@ class ACMContestRankSerializer(serializers.ModelSerializer):
         super().__init__(*args, **kwargs)
 
     def get_user(self, obj):
-        return UsernameSerializer(obj.user, need_real_name=self.is_contest_admin).data
+        return UsernameSerializer(obj.user, need_real_name=obj.user.is_authenticated).data
 
 
 class OIContestRankSerializer(serializers.ModelSerializer):
@@ -98,7 +98,7 @@ class OIContestRankSerializer(serializers.ModelSerializer):
         super().__init__(*args, **kwargs)
 
     def get_user(self, obj):
-        return UsernameSerializer(obj.user, need_real_name=self.is_contest_admin).data
+        return UsernameSerializer(obj.user, need_real_name=obj.user.is_authenticated).data
 
 
 class ACMContesHelperSerializer(serializers.Serializer):
diff --git a/problem/serializers.py b/problem/serializers.py
index 2c09a6c9..fad90c74 100644
--- a/problem/serializers.py
+++ b/problem/serializers.py
@@ -24,8 +24,7 @@ class CreateSampleSerializer(serializers.Serializer):
 class CreateTestCaseScoreSerializer(serializers.Serializer):
     input_name = serializers.CharField(max_length=32)
     output_name = serializers.CharField(max_length=32)
-    score = serializers.IntegerField(min_value=0)
-
+    score = serializers.DecimalField(max_digits=5, decimal_places=2, min_value=0)
 
 class CreateProblemCodeTemplateSerializer(serializers.Serializer):
     pass
diff --git a/problem/views/admin.py b/problem/views/admin.py
index 5ce9413b..3bf719c4 100644
--- a/problem/views/admin.py
+++ b/problem/views/admin.py
@@ -5,6 +5,7 @@ import os
 import tempfile
 import zipfile
 from wsgiref.util import FileWrapper
+from decimal import Decimal
 
 from django.conf import settings
 from django.db import transaction
@@ -186,13 +187,28 @@ class ProblemBase(APIView):
             data["spj_language"] = None
             data["spj_code"] = None
         if data["rule_type"] == ProblemRuleType.OI:
-            total_score = 0
+            # total_score = 0
+            # for item in data["test_case_score"]:
+            #     if item["score"] <= 0:   # item["score"] is now a string for some reason
+            #         return "Invalid score"
+            #     else:
+            #         total_score += item["score"]
+            # data["total_score"] = total_score
+            total_score = Decimal(0)
             for item in data["test_case_score"]:
+                if isinstance(item["score"], str):
+                    try:
+                        item["score"] = Decimal(item["score"])
+                    except ValueError:
+                        return "Invalid score"
                 if item["score"] <= 0:
                     return "Invalid score"
                 else:
                     total_score += item["score"]
-            data["total_score"] = total_score
+            # Check if total_score can be an integer, as we don't want to change the model field type
+            if total_score != int(total_score):
+                return "Total score must be an integer"
+            data["total_score"] = int(total_score)
         data["languages"] = list(data["languages"])
 
 
